// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/pdcgo/shared/configs"
	"github.com/pdcgo/shared/custom_connect"
	"github.com/pdcgo/shared_service"
	"net/http"
)

// Injectors from wire.go:

func InitializeApp() (*App, error) {
	serveMux := http.NewServeMux()
	appConfig, err := configs.NewProductionConfig()
	if err != nil {
		return nil, err
	}
	db, err := NewDatabase(appConfig)
	if err != nil {
		return nil, err
	}
	cache, err := NewCache()
	if err != nil {
		return nil, err
	}
	authorization := NewAuthorization(appConfig, db, cache)
	defaultInterceptor, err := custom_connect.NewDefaultInterceptor()
	if err != nil {
		return nil, err
	}
	registerHandler := shared_service.NewRegister(serveMux, db, authorization, defaultInterceptor)
	app := NewApp(serveMux, registerHandler)
	return app, nil
}
